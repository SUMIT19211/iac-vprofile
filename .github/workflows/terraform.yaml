name: "Vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_NAME: ${{ secrets.BUCKET_TF_NAME }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks


jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.3'
        
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_NAME"
        
      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate  

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true


      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: |
          echo "Terraform plan failed. Please check the logs for details."
          exit 1

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply  -input=false -auto-approve -parallelism=1 planfile 
          echo "Terraform apply completed successfully."


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}

      - name: Get kubeconfig file
        id: get_kubeconfig
        if: steps.apply.outcome == 'success'
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          echo "Kubeconfig file updated successfully."

      - name: Install ingress controller
        if: steps.apply.outcome == 'success' && steps.get_kubeconfig.outcome == 'success'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
          echo "Ingress controller installed successfully."

          
